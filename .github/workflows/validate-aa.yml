name: Validate AA Contribution

on:
  pull_request:
    paths:
      - "aa/**"

jobs:
  validate-aa-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Files and Prepare Comment
        id: validation
        run: |
          # --- Part 1: Run validations (same as before) ---
          set -e
          if git diff --name-status origin/${{ github.base_ref }} -- aa/ | grep -qE "^[MD]"; then
            echo "❌ Error: Modifying or deleting existing files is not allowed."
            exit 1
          fi

          ADDED_FILES=$(git diff --name-only --diff-filter=A origin/${{ github.base_ref }} -- aa/)
          if [ -z "$ADDED_FILES" ]; then
            echo "No new AA files added. Skipping validation."
            echo "comment_body=✅ No new AA files to validate." >> $GITHUB_OUTPUT
            exit 0
          fi

          for FILE_PATH in $ADDED_FILES; do
            # (Validations for each file remain the same)
            FILENAME=$(basename "$FILE_PATH")
            BASENAME="${FILENAME%.*}"
            if git cat-file -e origin/${{ github.base_ref }}:"$FILE_PATH" 2>/dev/null; then exit 1; fi
            if [[ ! "$FILENAME" =~ \.txt$ ]]; then exit 1; fi
            if [[ ! "$BASENAME" =~ ^[a-z0-9_-]+$ ]]; then exit 1; fi
          done

          # --- Part 2: Prepare the comment body with file links ---
          FILE_COUNT=$(echo "$ADDED_FILES" | wc -l)

          # Prepare variables for URL construction
          REPO_URL="https://github.com/${{ github.repository }}"
          COMMIT_SHA="${{ github.event.pull_request.head.sha }}"

          COMMENT_BODY="### 🎨 AA Contribution Check\n\nThe following ${FILE_COUNT} file(s) were found in this pull request:\n"

          # Loop through files and create a Markdown list with links
          while read -r file; do
            FILE_URL="${REPO_URL}/blob/${COMMIT_SHA}/${file}"
            COMMENT_BODY="${COMMENT_BODY}\n- [\`${file}\`](${FILE_URL})"
          done <<< "$ADDED_FILES"

          COMMENT_BODY="${COMMENT_BODY}\n\n**Result:** ✅ All files passed validation!"

          # Save the multiline string to the GITHUB_OUTPUT
          echo 'comment_body<<EOF' >> $GITHUB_OUTPUT
          echo -e "$COMMENT_BODY" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Post or Update Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.validation.outputs.comment_body }}
